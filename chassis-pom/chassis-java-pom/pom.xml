<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.vzhidu</groupId>
        <artifactId>chassis-parent</artifactId>
        <version>0.1.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>chassis-java-pom</artifactId>
    <name>chassis-java-pom</name>
    <description/>
    <packaging>pom</packaging>

    <properties>
        <!-- Maven Properties-->
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Dependencies Versions -->
        <lombok.version>1.18.10</lombok.version>
        <org-mapstruct.version>1.4.2.Final</org-mapstruct.version>
        <jakarta-validation-api.version>2.0.2</jakarta-validation-api.version>
        <google-findbugs.version>3.0.2</google-findbugs.version>
        <jackson.version>2.11.4</jackson.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <logback.version>1.2.3</logback.version>
        <junit-jupiter.version>5.7.1</junit-jupiter.version>
    </properties>

    <dependencies>
        <!-- Root dependencies for all projects -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <version>${lombok.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org-mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta-validation-api.version}</version>
        </dependency>

        <!--  Code Style Checking-->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${google-findbugs.version}</version>
        </dependency>

        <!-- Logging API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Json Serialization-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!--  Testing Junit5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <!-- Phrase 1: Development -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
            </plugin>

            <!-- Phrase 2: Build / Compile -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Phrase 3: Packaging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <!-- Phrase 4: Testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- Phrase 5: Report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <!-- Phrase 6: Deploy -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- SCM -->
                <!-- @formatter:off -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>4.0.0</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                        </execution>
                        <execution>
                            <id>validate-the-git-infos</id>
                            <goals>
                                <goal>validateRevision</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                        <commitIdGenerationMode>flat</commitIdGenerationMode>
                        <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
                        <injectAllReactorProjects>true</injectAllReactorProjects>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <prefix>git</prefix>
                        <skipPoms>true</skipPoms>
                        <verbose>true</verbose>

                        <!--
                             Very important to make sure that the format is set to "properties"
                             (which is the default value if format tag is omitted)
                             instead of "JSON" in order to work with spring actuator
                        -->
                        <format>properties</format>
                        <gitDescribe>
                            <skip>false</skip>
                            <always>false</always>
                            <dirty>-dirty</dirty>
                        </gitDescribe>
                        <validationProperties>
                            <!-- verify that the current repository is not dirty -->
                            <validationProperty>
                                <name>validating git dirty</name>
                                <value>false</value>
                                <shouldMatchTo>false</shouldMatchTo>
                            </validationProperty>
                        </validationProperties>
                    </configuration>
                </plugin>
                <!-- @formatter:on -->

                <!--  The Maven plugin that supports various Git workflow-->
                <!--  We use Github Flow Model, see https://guides.github.com/introduction/flow/ -->
                <plugin>
                    <groupId>com.amashchenko.maven.plugin</groupId>
                    <artifactId>gitflow-maven-plugin</artifactId>
                    <version>1.14.0</version>
                    <configuration>
                        <!-- put your configurations here -->
                        <installProject>false</installProject>
                        <verbose>false</verbose>
                        <keepBranch>false</keepBranch>
                        <skipTestProject>true</skipTestProject>
                        <featureSquash>true</featureSquash>
                        <pushRemote>true</pushRemote>

                        <gitFlowConfig>
                            <productionBranch>master</productionBranch>
                            <developmentBranch>master</developmentBranch>
                            <featureBranchPrefix>feature/</featureBranchPrefix>
                            <releaseBranchPrefix>release/</releaseBranchPrefix>
                            <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                            <origin>origin</origin>
                        </gitFlowConfig>
                    </configuration>
                </plugin>

                <!-- Compile and Packaging -->
                <!--  The Compiler Plugin is used to compile the sources of your project.-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <!-- put your configurations here -->
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${org-mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- Packaging -->
                <!-- spring-boot-starter-parent 提供spring-boot-maven-plugin 和 maven-shade-plugin两种打包工作，可根据实际需要选择-->
                <!--解决依赖冲突问题-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <executions>
                        <execution>
                            <id>dependency-convergence</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <dependencyConvergence/>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <fail>${maven.enforcer.fail}</fail>
                    </configuration>
                </plugin>

                <!-- Testing -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M4</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${junit-jupiter.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Report -->
                <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.5</version>
                    <!-- default target/jacoco/site/* -->
                    <configuration>
                        <outputDirectory>target/jacoco-report</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>coverage-report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--  Deploy -->
                <!--  The Javadoc Plugin generates javadoc using the Javadoc tool.-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <!-- put your configurations here -->
                    </configuration>
                    <executions>
                        <execution>
                            <phase>site</phase>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--  The Site Plugin is used to generate a site for the project.-->
                <!--  Upgrade latest version, override default 3.3-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>checkstyle</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>checkstyle</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!--  The Checkstyle Plugin generates a report regarding the code style used by the developers.-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>3.1.0</version>
                        <dependencies>
                            <dependency>
                                <groupId>com.puppycrawl.tools</groupId>
                                <artifactId>checkstyle</artifactId>
                                <version>8.14</version>
                            </dependency>
                            <dependency>
                                <groupId>io.vzhidu</groupId>
                                <artifactId>chassis-build-tools</artifactId>
                                <version>${io.vzhidu.build-tools.version}</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- put your configurations here -->
                            <configLocation>${maven.checkstyle.file}</configLocation>
                            <suppressionsLocation>${maven.checkstyle.suppressions.file}</suppressionsLocation>
                            <includeTestSourceDirectory>false</includeTestSourceDirectory>
                            <logViolationsToConsole>true</logViolationsToConsole>
                            <failOnViolation>true</failOnViolation>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>